# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Juan Fiol
# This file is distributed under the same license as the TOF-simulator
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TOF-simulator version: 2.99\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-09 18:59-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/tofsim.rst:3
msgid "Package API"
msgstr ""

#: ../../source/tofsim.rst:7
msgid "nist\\_elem"
msgstr ""

#: of tofsim.nist_elem.Sustancias:1
msgid "Bases: :class:`dict`"
msgstr ""

#: of tofsim.nist_elem.Sustancias:1
msgid "Object describing a list of substances."
msgstr ""

#: of tofsim.nist_elem.Sustancias:4 tofsim.nist_elem.Sustancias.list:9
#: tofsim.tof.ToF:8
msgid "Examples"
msgstr ""

#: of tofsim.nist_elem.Sustancias:23
msgid "To get help use:"
msgstr ""

#: of tofsim.nist_elem.Sustancias.add:1
msgid "Returns a dictionary with all the information on the substances added."
msgstr ""

#: of tofsim.nist_elem.Sustancias.add tofsim.nist_elem.Sustancias.get_lista
#: tofsim.nist_elem.Sustancias.list tofsim.nist_elem.Sustancias.loadconf
#: tofsim.nist_elem.Sustancias.remove tofsim.nist_elem.Sustancias.saveconf
#: tofsim.nist_elem.Sustancias.sort tofsim.nist_elem.Sustancias.to_latex
#: tofsim.nist_elem.Sustancias.to_pdf tofsim.nist_elem.Sustancias.to_table
#: tofsim.nist_elem.analyze_substance tofsim.nist_elem.format_listmass
#: tofsim.nist_elem.loadmass tofsim.nist_elem.make_label
#: tofsim.nist_elem.mass2conf tofsim.nist_elem.read_nist_data
#: tofsim.tof.ToF.add_substances tofsim.tof.ToF.get_tof_parameters
#: tofsim.tof.ToF.make_plot tofsim.tof.ToF.remove_substances
#: tofsim.tof.ToF.signal
msgid "Parameters"
msgstr ""

#: of tofsim.nist_elem.Sustancias.add:3
msgid ""
"Comma separated list of substances to be added, por instance:      m = "
"add('H20,O2,N2,UF5,UF6')"
msgstr ""

#: of tofsim.nist_elem.Sustancias.add:4
msgid "Comma separated list of substances to be added, por instance:"
msgstr ""

#: of tofsim.nist_elem.Sustancias.add:6
msgid "m = add('H20,O2,N2,UF5,UF6')"
msgstr ""

#: of tofsim.nist_elem.Sustancias.copy:1
msgid "Copy the object and returns a new one."
msgstr ""

#: of tofsim.nist_elem.Sustancias.get_lista:1
msgid "Return a list with the cols"
msgstr ""

#: of tofsim.nist_elem.Sustancias.get_lista:3
msgid ""
"A list of string selecting the fields to included, chosen from "
"`\"A,L,l,M,P,S,Z\"`"
msgstr ""

#: of tofsim.nist_elem.Sustancias.list:1
msgid ""
"Return a list of elements, optionally filtered with a criteria given by "
"key"
msgstr ""

#: of tofsim.nist_elem.Sustancias.list:3
msgid ""
"- if key=None returns all elements - otherwise key has to be a function "
"returning `True` or `False`."
msgstr ""

#: of tofsim.nist_elem.Sustancias.list:4
msgid "if key=None returns all elements"
msgstr ""

#: of tofsim.nist_elem.Sustancias.list:5
msgid "otherwise key has to be a function returning `True` or `False`."
msgstr ""

#: of tofsim.nist_elem.Sustancias.loadconf:1
msgid "Load substances from file"
msgstr ""

#: of tofsim.nist_elem.Sustancias.loadconf:3
msgid "File with definition of substances to add"
msgstr ""

#: of tofsim.nist_elem.Sustancias.loadconf:6
msgid "File should have configuration format as::"
msgstr ""

#: of tofsim.nist_elem.Sustancias.remove:1
msgid "Remove a fragment"
msgstr ""

#: of tofsim.nist_elem.Sustancias.remove:3
msgid "substance or fragment to remove"
msgstr ""

#: of tofsim.nist_elem.Sustancias.remove:5
msgid "either 'fragment' (the default value) or 'substance':"
msgstr ""

#: of tofsim.nist_elem.Sustancias.remove:8
msgid "For the choices of 'criteria', we use:"
msgstr ""

#: of tofsim.nist_elem.Sustancias.remove:10
msgid "'fragment': e.g:  Ar^{2+}, SF6^++,  Removes exactly the fragment given"
msgstr ""

#: of tofsim.nist_elem.Sustancias.remove:11
msgid ""
"'substance': e.g:  Ar, SF6, Xe, Remove all fragments with independently "
"of the charge"
msgstr ""

#: of tofsim.nist_elem.Sustancias.saveconf:1
msgid "Save the substances to a file in a format that may be later read"
msgstr ""

#: of tofsim.nist_elem.Sustancias.saveconf:3 tofsim.nist_elem.Sustancias.sort:4
#: tofsim.nist_elem.Sustancias.to_pdf:5 tofsim.tof.ToF.get_tof_parameters:3
#: tofsim.tof.ToF.remove_substances:3
msgid "description"
msgstr ""

#: of tofsim.nist_elem.Sustancias.saveconf:5
msgid "Name of the file. If `None` prints to screen"
msgstr ""

#: of tofsim.nist_elem.Sustancias.show_help:1
msgid "Show help on use of Object Sustancias"
msgstr ""

#: of tofsim.nist_elem.Sustancias.sort:1
msgid "Sort the substances according to the specified order. The sort is stable."
msgstr ""

#: of tofsim.nist_elem.Sustancias.sort:6
msgid "desired order. One of 'ALMPSZq'"
msgstr ""

#: of tofsim.nist_elem.Sustancias.sort:8
msgid "If `True` will be reversed"
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_latex:1
msgid "Convert to LaTeX table using tabulate package"
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_latex:3
msgid "Substance characteristics to include."
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_latex:5
msgid "String to write before data."
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_latex:7
msgid "If `True` make a standalone document that may be compiled by LaTeX."
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_pdf:1
msgid "Convert to pdf format using latex."
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_pdf:3
msgid "Export to a latex file and compiles it."
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_pdf:7
msgid "Substance characteristics to include"
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_pdf:9
msgid "Description to include before data"
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_pdf:11
msgid "command to compile to pdf"
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_pdf:13
msgid "Name of the output file"
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_table:1
msgid "Format the list of sustances in Table format."
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_table:3
msgid ""
"This is a wrapper around the tabulate function from the tabulate package:"
" https://pypi.python.org/pypi/tabulate. Available formats are: "
"fancy_grid, grid, plain, psql, rst, simple, tsv latex, latex_raw, "
"latex_booktabs, mediawiki, orgtbl, pipe, html"
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_table:10
msgid ""
"Options `tablefmt`, `floatfmt`, `numalign`, `stralign`, `missingval` are "
"passed to package `tabulate`, if available."
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_table:12
msgid "A list of strings with the characteristics to include. Must be in ALMPSZ"
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_table:14
msgid "String to include before data"
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_table:16
msgid "Format of table"
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_table:18
msgid "Format used to write numbers"
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_table:20
msgid "Alignment for numbers"
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_table:22
msgid "Alignment for strings"
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_table:24
msgid "Value to write when values are missing"
msgstr ""

#: of tofsim.nist_elem.Sustancias.to_text:1
msgid "Convenience function to format as a simple table"
msgstr ""

#: of tofsim.nist_elem.analyze_substance:1
msgid ""
"Devuelve todas las combinaciones con posibles isotopos (y su poblacion) "
"de la sustancia con la formula dada."
msgstr ""

#: of tofsim.nist_elem.analyze_substance:4
msgid "substance to include (H2O, CO, SF6, N2, ...)"
msgstr ""

#: of tofsim.nist_elem.analyze_substance:6
msgid "Minimum abundance that has to have an isotope to be included"
msgstr ""

#: of tofsim.nist_elem.analyze_substance:8
msgid "If True includes all fragments. For instance from 'CO' -> 'CO', 'C', 'O'"
msgstr ""

#: of tofsim.nist_elem.analyze_substance:10
msgid "If True includes all isotope combinations"
msgstr ""

#: of tofsim.nist_elem.analyze_substance:13
msgid "Examples::"
msgstr ""

#: of tofsim.nist_elem.format_listmass:1
msgid ""
"Simple formatting of a list of substances. It is intended to use with the"
" output of `get_lista()`"
msgstr ""

#: of tofsim.nist_elem.format_listmass:4
msgid "List where each row is a list with data on a single element"
msgstr ""

#: of tofsim.nist_elem.format_listmass:6
msgid "End of line string"
msgstr ""

#: of tofsim.nist_elem.format_listmass:8
msgid "string used as separator within a line"
msgstr ""

#: of tofsim.nist_elem.format_listmass:10
msgid "Header to add before the data"
msgstr ""

#: of tofsim.nist_elem.format_listmass:12
msgid "Footer to add after the data"
msgstr ""

#: of tofsim.nist_elem.loadmass:1
msgid "Load masses from configuration file"
msgstr ""

#: of tofsim.nist_elem.loadmass:3
msgid "File to read masses from"
msgstr ""

#: of tofsim.nist_elem.loadmass tofsim.nist_elem.mass2conf
#: tofsim.tof.ToF.signal
msgid "Returns"
msgstr ""

#: of tofsim.nist_elem.loadmass:6
msgid "a dictionary with the elements read"
msgstr ""

#: of tofsim.nist_elem.loadmass tofsim.nist_elem.mass2conf
#: tofsim.tof.ToF.signal
msgid "Return type"
msgstr ""

#: of tofsim.nist_elem.make_label:1
msgid "Construct the label for a given substance"
msgstr ""

#: of tofsim.nist_elem.make_label:3
msgid "Array of tuples [(A1,S1), (A2,S2), ...] for all atoms in the substance"
msgstr ""

#: of tofsim.nist_elem.make_label:5
msgid ""
"Indicates the format of labels::      'key'         -> \"14N2\"     "
"'Latex'       -> \"$^{14}N_{2}$\"     'latexsimple' -> \"$N_{2}$\"     "
"'latexdoc'    -> r\"\\ce{^{14}N_{2}}\"     'mass'        -> \"28\""
msgstr ""

#: of tofsim.nist_elem.make_label:6
msgid "Indicates the format of labels::"
msgstr ""

#: of tofsim.nist_elem.mass2conf:1
msgid "Format masses for a configuration file"
msgstr ""

#: of tofsim.nist_elem.mass2conf:3
msgid "Information on substance(s)"
msgstr ""

#: of tofsim.nist_elem.mass2conf:6
msgid "string with the format of a configuration file"
msgstr ""

#: of tofsim.nist_elem.read_nist_data:1
msgid ""
"Read data from file *datafile* and fills the dictionary "
"`__NIST_ELEMENTS__` with all the data"
msgstr ""

#: of tofsim.nist_elem.read_nist_data:4
msgid "Add all elements whose abundance is higher than threshold"
msgstr ""

#: ../../source/tofsim.rst:16
msgid "tof"
msgstr ""

#: of tofsim.tof.ToF:1
msgid "Bases: :class:`object`"
msgstr ""

#: of tofsim.tof.ToF:1
msgid ""
"The ToF object defines and handles all aspects of a Time-of-Flight "
"spectrometer"
msgstr ""

#: of tofsim.tof.ToF:3
msgid ""
"The following parameters related to the construction and operation are "
"included: Distances, voltages, working temperature, particle velocity "
"fields and dispersion, time duration and size of the ionizing beam are "
"also included."
msgstr ""

#: of tofsim.tof.ToF.add_substances:1
msgid "Add substances to be simulated."
msgstr ""

#: of tofsim.tof.ToF.add_substances:3
msgid ""
"Comma-separated string, or list of strings, each substance may have the "
"form            SF5^{+}, SF5^{++}, SF5^+, S^2+"
msgstr ""

#: of tofsim.tof.ToF.add_substances:5
msgid "Minimum abundance of a given isotope to be included (default 1.e-3)."
msgstr ""

#: of tofsim.tof.ToF.calc_signal:1
msgid "Calculo de los histogramas para generar la señal de un grupo de partículas"
msgstr ""

#: of tofsim.tof.ToF.data_to_array:1
msgid "Conversion from signal to \"numpy arrays\", sorted by time"
msgstr ""

#: of tofsim.tof.ToF.data_to_array:3
msgid "Keyword Arguments: unpack -- (default False)"
msgstr ""

#: of tofsim.tof.ToF.get_statistics_peaks:1
msgid ""
"Returns the peaks of the spectra for substances. fwidth is the fraction "
"of the maximum at which to evaluate the full width. fwidth = 0.5 "
"corresponds to FWHM"
msgstr ""

#: of tofsim.tof.ToF.get_tof_parameters:1
msgid "Returns the parameters of TOF in a dict."
msgstr ""

#: of tofsim.tof.ToF.get_tof_parameters:5
msgid "If `True` add an ascii graphic with the diagram of the TOF"
msgstr ""

#: of tofsim.tof.ToF.load_conf_file:1
msgid ""
"Load a configuration file, update tof parameters, and also return masses "
"if present."
msgstr ""

#: of tofsim.tof.ToF.make_plot:1
msgid "Plot the signals in a \"standard\" form."
msgstr ""

#: of tofsim.tof.ToF.make_plot:3
msgid "masses to plot. If no present uses simulated fragments"
msgstr ""

#: of tofsim.tof.ToF.make_plot:5
msgid "if not None -> Save the figure to \"fname\""
msgstr ""

#: of tofsim.tof.ToF.make_plot:7
msgid ""
"- negative = `True/False`             : if `True` -> Negative signal - "
"graph_all=`True/False` (or show_all): if `True` -> Plot individual "
"species - show_legend=`True/False`            : if `True` -> Show the "
"legend"
msgstr ""

#: of tofsim.tof.ToF.make_plot:8
msgid "negative = `True/False`             : if `True` -> Negative signal"
msgstr ""

#: of tofsim.tof.ToF.make_plot:9
msgid "graph_all=`True/False` (or show_all): if `True` -> Plot individual species"
msgstr ""

#: of tofsim.tof.ToF.make_plot:10
msgid "show_legend=`True/False`            : if `True` -> Show the legend"
msgstr ""

#: of tofsim.tof.ToF.mean_times:1
msgid ""
"Evaluate the 'main' time of each species, given as if generated in ideal "
"conditions:"
msgstr ""

#: of tofsim.tof.ToF.mean_times:3
msgid "At time t=0"
msgstr ""

#: of tofsim.tof.ToF.mean_times:4
msgid "At rest (null initial velocity)"
msgstr ""

#: of tofsim.tof.ToF.mean_times:5
msgid "At a distance x0 from the center of the extraction plates (s = 0)"
msgstr ""

#: of tofsim.tof.ToF.remove_substances:1
msgid "Remove substances from the simulation"
msgstr ""

#: of tofsim.tof.ToF.remove_substances:5
msgid "substances or fragments to remove"
msgstr ""

#: of tofsim.tof.ToF.save_conf_file:1
msgid "Save configuration data for tof and masses to a file"
msgstr ""

#: of tofsim.tof.ToF.save_data:1
msgid "Save the signal to a data file"
msgstr ""

#: of tofsim.tof.ToF.set_initial_distribution:1
msgid "Initial velocity and position distributions"
msgstr ""

#: of tofsim.tof.ToF.signal:1
msgid "Evaluate the signal that would produce the particles in the ToF"
msgstr ""

#: of tofsim.tof.ToF.signal:3
msgid ""
"- key: is the label of the mass - 'M': Mass (in AMU) - 'P': (float in "
"range 0 to 1) Abundance - 'L': an (optional, possibly formatted) label, "
"otherwise the key is used"
msgstr ""

#: of tofsim.tof.ToF.signal:4
msgid "key: is the label of the mass"
msgstr ""

#: of tofsim.tof.ToF.signal:5
msgid "'M': Mass (in AMU)"
msgstr ""

#: of tofsim.tof.ToF.signal:6
msgid "'P': (float in range 0 to 1) Abundance"
msgstr ""

#: of tofsim.tof.ToF.signal:7
msgid "'L': an (optional, possibly formatted) label, otherwise the key is used"
msgstr ""

#: of tofsim.tof.ToF.signal:11
msgid ""
"**times** -- Sets the object variable self.times and also returns its "
"value"
msgstr ""

#: of tofsim.tof.ToF.time_of_extract:1
msgid ""
"Evaluates the time taken to extract a particle of mass M=1 and charge q=1"
" with initial velocity v_0 and position x_0 from the extraction plates."
msgstr ""

#: of tofsim.tof.ToF.time_of_flight:1
msgid ""
"Evaluates the time-of-flight of a particle of mass M=1 and charge q=1 "
"with initial velocity v_0 and position x_0."
msgstr ""

#: of tofsim.tof.ToF.time_of_flight_bibliog:1
msgid ""
"Alternative evaluatation of time-of-flight of a particle of mass M=1 and "
"charge q=1 with initial velocity v_0 and position x_0 (from "
"bibliography)."
msgstr ""

#: ../../source/tofsim.rst:25
msgid "tof\\_gtk"
msgstr ""

